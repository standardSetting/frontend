{"version":3,"sources":["helpers/createItemNumbers.js","helpers/mapScoresToNav.js","Navigation/NavContainer.js","logo.svg","Navigation/NavBar.js","Navigation/ScoreAndProgress/ImageContainer.js","Navigation/ScoreAndProgress/ButtonContainer.js","Navigation/ScoreAndProgress/NavButtons.js","Navigation/ScoreAndProgress/ScoreInput.js","Navigation/ScoreAndProgress/BottomContainer.js","Navigation/ScoreAndProgress/ScoreAndNavContainer.js","Navigation/ScoreAndProgress/CompletionBar.js","Navigation/NavMain.js","LoginLogout/LoginLogoutContainer.js","PurpleButton.js","LoginLogout/Login.js","Modals/Modal.js","Modals/InstructionsModal.js","Modals/AboutModal.js","Modals/CompletionModal.js","index.js","LoginLogout/CompletionPage.js"],"names":["createItemNumbers","titlesAndLabels","numberOfTitles","titles","length","itemNumberCounter","itemNumbersArray","i","numberOfLabels","labels","itemNumbersChildArray","j","push","mapScoresToNav","scores","mapScoresToNavChild","k","NavButton","props","borderWidth","bgColour","navButtonLabel","itemNumber","itemNavNumber","setItemNavNumber","scoreMappedToNav","onClick","e","preventDefault","className","NavButtonRow","itemNumbers","numberOfButtons","navButtonArray","scoresMappedToNav","NavTitle","title","NavRowAndTitle","NavContainer","allRows","NavBarText","text","action","extraStyle","NavBar","showAboutModal","showInstructionsModal","signOut","href","target","src","logo","ImageContainer","imgSource","width","height","ButtonContainer","children","ArrowLeft","viewBox","stroke","fill","d","ArrowRight","NavButtons","maxItemNavNumber","displayFinalSubmitButton","prevValue","ScoreInput","setScores","maxScores","inputFieldRef","inputFieldValue","setInputFieldValue","displayNumberOutOfRange","setDisplayNumberOutOfRange","console","log","type","value","onChange","score","Number","newScores","slice","ref","BottomContainer","style","ScoreAndNavContainer","CompletionBar","numerator","denominator","percentComplete","Math","round","percentCompletePixels","NavMain","numberOfScoresComplete","completionButtonClick","process","toString","LoginLogoutContainer","Width","PurpleButton","buttonText","Login","clickLogin","Modal","clickOk","modalTitle","InstructionsModal","CompletionModal","clickFinalSubmit","CompletionPage","Image","myMaxScores","random","App","useState","Array","setScoresMappedToNav","setDisplayFinalSubmitButton","setNumberOfScoresComplete","renderLoginPage","setRenderLoginPage","renderNavMain","setRenderNavMain","renderCompletionPage","setRenderCompletionPage","renderCompletionModal","setRenderCompletionModal","renderInstructionsModal","setRenderInstructionsModal","renderAboutModal","setRenderAboutModal","useRef","useEffect","indexOf","filter","x","AboutModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e276e752.chunk.js","sourcesContent":["function createItemNumbers(titlesAndLabels){\n    const numberOfTitles = titlesAndLabels.titles.length;\n    let itemNumberCounter = 1;\n    let itemNumbersArray = [];\n\n    for (var i=0; i<numberOfTitles; i++){\n        let numberOfLabels = titlesAndLabels.labels[i].length\n        let itemNumbersChildArray = []\n            for (var j=0; j<numberOfLabels; j++){\n                itemNumbersChildArray.push(itemNumberCounter)\n                itemNumberCounter++;\n            }\n        itemNumbersArray.push(itemNumbersChildArray)\n    }\n    return [itemNumbersArray, itemNumberCounter-1];\n}\nexport default createItemNumbers;","function mapScoresToNav(scores, titlesAndLabels){\n    const [...labels] = titlesAndLabels.labels\n    let mapScoresToNav = []\n    let mapScoresToNavChild = []\n    let k=0\n    for (var i=0; i<labels.length; i++){\n        for (var j=0; j<labels[i].length; j++){\n            mapScoresToNavChild.push(scores[k])\n            k++;\n        }\n        mapScoresToNav.push(mapScoresToNavChild);\n        mapScoresToNavChild = []\n    }\n\n    return mapScoresToNav;\n}\nexport default mapScoresToNav;","function NavButton(props) {\nconst navButtonLabel = props.navButtonLabel;\nconst itemNumber = props.itemNumber;\nconst itemNavNumber = props.itemNavNumber;\nconst setItemNavNumber = props.setItemNavNumber;\nconst scoreMappedToNav = props.scoreMappedToNav;\n\nfunction handleClick(e){\n    e.preventDefault();\n    setItemNavNumber(itemNumber)\n}\n\nlet borderWidth\nlet bgColour\nitemNavNumber === itemNumber ? borderWidth = 'bw1' : borderWidth = '';\nscoreMappedToNav === '' ? bgColour = 'white' : bgColour = 'bg-light-gray'\n\nreturn (\n    <>\n    <div onClick={handleClick} className={`mt1 mr2 mb2 buttonDimensions ba br3 b--purple shadow-4 grow pointer ${borderWidth} ${bgColour}`}>\n        <div className=''>\n            <div className='ma2 dark-gray'>{navButtonLabel}</div>\n        </div>\n    </div>\n    </>\n)\n}\n\nfunction NavButtonRow(props) {\nconst labels = props.labels;\nconst itemNumbers = props.itemNumbers;\nconst numberOfButtons = props.labels.length;\nconst navButtonArray = []\nconst itemNavNumber = props.itemNavNumber;\nconst setItemNavNumber = props.setItemNavNumber;\nconst scoresMappedToNav = props.scoresMappedToNav;\n\nfor (var i=0; i<numberOfButtons; i++) {\n    navButtonArray.push(\n        <NavButton\n            key={itemNumbers[i]}\n            navButtonLabel={labels[i]} \n            itemNumber={itemNumbers[i]}\n            itemNavNumber={itemNavNumber}\n            setItemNavNumber={setItemNavNumber}\n            scoreMappedToNav={scoresMappedToNav[i]}\n        />)\n    }\nreturn (\n    <div className='flex flex-row flex-wrap'>\n    {navButtonArray}\n    </div>\n)\n}\n\nfunction NavTitle(props) {\nconst title = props.title;\nreturn (\n    <div className='f4 purple mt1 b'>{title}</div>\n)\n}\n\nfunction NavRowAndTitle(props) {\nconst title = props.title;\nconst labels = props.labels;\nconst itemNumbers = props.itemNumbers;\nconst itemNavNumber = props.itemNavNumber;\nconst setItemNavNumber = props.setItemNavNumber;\nconst scoresMappedToNav = props.scoresMappedToNav;\n\nreturn (\n    <div className='mt3 mb3 flex flex-column'>\n    <NavTitle title={title}/>\n    <NavButtonRow \n        labels={labels} \n        itemNumbers={itemNumbers}\n        itemNavNumber={itemNavNumber}\n        setItemNavNumber={setItemNavNumber}\n        scoresMappedToNav={scoresMappedToNav}\n        />\n    </div>\n)\n}\n\nfunction NavContainer(props) {\nconst allRows = []\nconst titlesAndLabels = props.titlesAndLabels;\nconst itemNumbers = props.itemNumbers;\nconst itemNavNumber = props.itemNavNumber;\nconst setItemNavNumber = props.setItemNavNumber;\nconst scoresMappedToNav = props.scoresMappedToNav;\n\n    for (var i=0; i<titlesAndLabels.titles.length; i++){\n        allRows.push(<NavRowAndTitle \n            key={titlesAndLabels.titles[i]}\n            title={titlesAndLabels.titles[i]} \n            labels={titlesAndLabels.labels[i]}\n            itemNumbers={itemNumbers[i]}\n            itemNavNumber={itemNavNumber}\n            setItemNavNumber={setItemNavNumber}\n            scoresMappedToNav={scoresMappedToNav[i]}\n            />\n        )\n    }\nreturn (\n    <>\n        <div className='navBarSide br b--purple bw1 shadow-4 ml3'>\n                {allRows}\n        </div>\n    </>\n);\n}\n\nexport default NavContainer;","export default __webpack_public_path__ + \"static/media/logo.0d889039.svg\";","import logo from '../logo.svg'\n\nfunction NavBarText(props) {\n  const text = props.text;\n  const action = props.action;\n  const extraStyle = props.extraStyle;\n  return (\n    <div onClick={action} className={'flex-grow pl3 pr3 pt2 pb2 flex items-center b--purple bw1 '+extraStyle}>\n      <div className=\"f5 link dib dim purple pointer\">{text}</div>\n    </div>\n  )\n}\n\nfunction NavBar(props){\n  const showAboutModal = props.showAboutModal;\n  const showInstructionsModal = props.showInstructionsModal;\n  const signOut = props.signOut;\n\n    return (\n      <nav className=\"flex justify-between items-center h3 b--purple bb navbar bw5\">\n        <div className=\"ml4 flex items-end\">\n          <a href=\"https://www.acer.org/au\" target=\"_blank\">\n              <img src={logo} className='mt2'/>\n          </a>\n          <div className=\"f3 purple ml3 mb1\">Swift</div>\n        </div>\n        <div className='flex flex-row mr2'>\n          <NavBarText action={showAboutModal} text='About standard setting' extraStyle='br' />\n          <NavBarText action={showInstructionsModal} text='Instructions' extraStyle='br' />\n          <NavBarText action={signOut} text='Sign out' />\n        </div>\n      </nav>\n    )\n  } \n\n  export default NavBar;","function ImageContainer(props){\n    const imgSource = props.imgSource\n    return (\n      <div className='flex justify-center mt4 image'>\n        <img src={imgSource} width='auto' height='auto'/>\n      </div>   \n    )\n  }\n\n  export default ImageContainer;","function ButtonContainer(props) {\n    return (\n        <a className=\"f5 br2 no-underline purple inline-flex items-center pa3 ba border-box pointer b--purple\">\n            {props.children}\n        </a>\n    )\n}\n\nexport default ButtonContainer;","import ButtonContainer from './ButtonContainer'\n\nfunction ArrowLeft(props){\n return (\n    <svg className=\"w1\" viewBox=\"0 0 32 32\" >\n        <path stroke=\"none\" fill=\"#5E2CA5\" d=\"M20 1 L24 5 L14 16 L24 27 L20 31 L6 16 z\"></path>\n    </svg>\n )\n}\n\nfunction ArrowRight(props) {\n    return (\n    <svg className=\"w1\" viewBox=\"0 0 32 32\">\n        <path stroke=\"none\" fill=\"#5E2CA5\" d=\"M12 1 L26 16 L12 31 L8 27 L18 16 L8 5 z\"></path>\n    </svg>\n    )\n}\n\nfunction NavButtons(props) {\n    const itemNavNumber = props.itemNavNumber;\n    const setItemNavNumber = props.setItemNavNumber;\n    const maxItemNavNumber = props.maxItemNavNumber; \n    const displayFinalSubmitButton = props.displayFinalSubmitButton;\n\n    function goToPreviousItem(e){\n        e.preventDefault();\n        setItemNavNumber(prevValue => prevValue - 1)\n    }\n\n    function goToNextItem(e){\n        e.preventDefault();\n        setItemNavNumber(prevValue => prevValue + 1)\n    }\n\n    return (\n    <div className=\"flex items-center justify-between pa3\">\n        {\n            (itemNavNumber > 1) && \n            <div className='grow' onClick={goToPreviousItem}>\n                <ButtonContainer>\n                    <ArrowLeft />\n                    <span className=\"pl1\">Previous</span>\n                </ButtonContainer>\n            </div>\n        }\n        {\n            (itemNavNumber === 1) && \n            <div className='w1 h1'></div> \n        }\n        {\n            (itemNavNumber !== maxItemNavNumber) &&    \n            <div className='grow' onClick={goToNextItem}>\n                    <ButtonContainer>\n                        <span className=\"pr1\">Next</span>\n                        <ArrowRight />\n                    </ButtonContainer>\n              </div>\n        }  \n    </div>\n    );\n}\n\nexport default NavButtons;","import React, { useState, useRef } from 'react';\n\nfunction ScoreInput(props) {\n    const scores = props.scores;\n    const setScores = props.setScores;\n    const maxScores = props.maxScores;\n    const itemNavNumber = props.itemNavNumber;\n    const inputFieldRef = props.inputFieldRef;\n    const inputFieldValue = props.inputFieldValue;\n    const setInputFieldValue = props.setInputFieldValue;\n    const displayNumberOutOfRange = props.displayNumberOutOfRange;\n    const setDisplayNumberOutOfRange = props.setDisplayNumberOutOfRange;\n\n    console.log(scores)\n\n    function handleInput(e){\n        e.preventDefault()\n        let score = e.target.value;\n        if (Number(score) >= 0 && Number(score) <= maxScores[itemNavNumber-1]){\n            setInputFieldValue(score)\n            setDisplayNumberOutOfRange(false)\n        } else {\n            score = ''\n            setInputFieldValue(score)\n            setDisplayNumberOutOfRange(true)\n        }\n\n        let newScores = scores.slice()\n        newScores[itemNavNumber - 1] = score\n        setScores(newScores)\n    }\n\n    return (\n    <div className=\"mt2 flex items-center justify-center\">\n        <div className=\"\">\n            <input \n                className=\"inputField f4 input-reset ba pa2 mb2 w-100 tc\" \n                type=\"text\" \n                value={inputFieldValue}\n                onChange={handleInput}\n                ref={inputFieldRef}\n            />\n            <div className=\"f5 purple db mb2\">Enter a score for the minimally competent candidate</div>\n            {displayNumberOutOfRange &&\n            <div className=\"f5 purple db mb2 i\">{`Please enter a score between 0 and ${maxScores[itemNavNumber-1]}.`}</div>}\n            {!displayNumberOutOfRange &&\n            <div className=\"f5 white db mb2 i\">{'-'}</div>}\n            \n        </div>\n    </div>\n    )\n}\n\nexport default ScoreInput;","function BottomContainer(props){\n    return (\n        <div className='flex justify-center mt2 pb4' style={{height: '240px'}}>\n            <div className='ba b--purple shadow-4 br3 pa2 bottomContainer flex flex-column'>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default BottomContainer;","import NavButtons from './NavButtons';\nimport ScoreInput from './ScoreInput';\nimport BottomContainer from './BottomContainer';\n\nfunction ScoreAndNavContainer(props) {\n    const itemNavNumber = props.itemNavNumber;\n    const setItemNavNumber = props.setItemNavNumber;\n    const scores = props.scores;\n    const setScores = props.setScores;\n    const maxScores = props.maxScores;\n    const maxItemNavNumber = props.maxItemNavNumber;\n    const inputFieldValue = props.inputFieldValue;\n    const setInputFieldValue = props.setInputFieldValue;\n    const displayNumberOutOfRange = props.displayNumberOutOfRange;\n    const setDisplayNumberOutOfRange = props.setDisplayNumberOutOfRange;\n    const inputFieldRef = props.inputFieldRef;\n    const displayFinalSubmitButton = props.displayFinalSubmitButton;\n\n    return (\n        <BottomContainer>\n            <ScoreInput     \n              inputFieldValue={inputFieldValue}\n              setInputFieldValue={setInputFieldValue}\n              itemNavNumber={itemNavNumber}\n              scores={scores}\n              setScores={setScores}\n              maxScores={maxScores}\n              displayNumberOutOfRange={displayNumberOutOfRange}\n              setDisplayNumberOutOfRange={setDisplayNumberOutOfRange}\n              inputFieldRef={inputFieldRef}\n              />\n            <NavButtons \n              scores={scores}\n              itemNavNumber={itemNavNumber}\n              maxItemNavNumber={maxItemNavNumber} \n              setItemNavNumber={setItemNavNumber}\n              displayFinalSubmitButton={displayFinalSubmitButton}\n              />\n      </BottomContainer>\n    )\n  }\n\n  export default ScoreAndNavContainer;","function CompletionBar(props) {\n    const COMPLETION_BAR_WIDTH = '182px'\n    const COMPLETION_BAR_HEIGHT = '21px'\n    const INNER_COMPLETION_BAR_WIDTH = 180\n    const INNER_COMPLETION_BAR_HEIGHT = '19px'\n\n    const numerator = props.numerator;\n    const denominator = props.denominator;\n\n    const percentComplete = Math.round(100*(numerator/denominator))\n    const percentCompletePixels = (numerator/denominator)*INNER_COMPLETION_BAR_WIDTH+'px'\n\n    return (\n        <div className='ma2 mt2 h2 mb2 ba br2' style={{width: COMPLETION_BAR_WIDTH, height: COMPLETION_BAR_HEIGHT}}>\n            <div \n                className='br2 bg-aubergine' \n                style={{width: percentCompletePixels,\n                height: INNER_COMPLETION_BAR_HEIGHT}}>\n            </div>\n            <div className='mt2 flex justify-center purple'>\n                    <span>\n                      {`${percentComplete}% complete`}\n                    </span>\n            </div>\n        </div>\n    );\n\n}\n\nexport default CompletionBar;","import React from 'react';\nimport NavContainer from './NavContainer';\nimport NavBar from './NavBar';\nimport ImageContainer from './ScoreAndProgress/ImageContainer';\nimport ScoreAndNavContainer from './ScoreAndProgress/ScoreAndNavContainer';\nimport ProgressAndSubmitContainer from './ScoreAndProgress/ProgressAndSubmitContainer';\nimport CompletionBar from './ScoreAndProgress/CompletionBar';\n\nfunction NavMain(props){\nconst itemNavNumber = props.itemNavNumber;\nconst inputFieldValue = props.inputFieldValue;\nconst setInputFieldValue = props.setInputFieldValue;\nconst setScores = props.setScores;\nconst maxScores = props.maxScores;\nconst displayNumberOutOfRange = props.displayNumberOutOfRange;\nconst setDisplayNumberOutOfRange = props.setDisplayNumberOutOfRange;\nconst inputFieldRef = props.inputFieldRef;\nconst displayFinalSubmitButton = props.displayFinalSubmitButton;\nconst numberOfScoresComplete = props.numberOfScoresComplete;\nconst maxItemNavNumber = props.maxItemNavNumber;\nconst scores = props.scores;\nconst titlesAndLabels = props.titlesAndLabels;\nconst itemNumbers = props.itemNumbers;\nconst setItemNavNumber = props.setItemNavNumber;\nconst scoresMappedToNav = props.scoresMappedToNav;\nconst showAboutModal = props.showAboutModal;\nconst showInstructionsModal = props.showInstructionsModal;\nconst signOut = props.signOut;\nconst completionButtonClick = props.completionButtonClick;\n\nreturn (\n  <>\n  <div>\n      <NavBar \n        showAboutModal={showAboutModal}\n        showInstructionsModal={showInstructionsModal}\n        signOut={signOut}\n      />\n    </div>\n      <div>\n      <div className='flex justify-between'>\n      <NavContainer\n          titlesAndLabels={titlesAndLabels} \n          itemNumbers={itemNumbers}\n          itemNavNumber={itemNavNumber}\n          setItemNavNumber={setItemNavNumber}\n          scoresMappedToNav={scoresMappedToNav}\n        />\n        <div className='flex flex-column imageAndNavButtons'>\n          <ImageContainer imgSource={`${process.env.PUBLIC_URL}/images/page${itemNavNumber.toString()}.png`}/>\n          <div className='mt4 flex flex-row flex-wrap justify-between items-end'>\n            <div className='w5 h1'></div>\n            <div className='ml4 mr4'>\n              <ScoreAndNavContainer \n                inputFieldValue={inputFieldValue}\n                setInputFieldValue={setInputFieldValue}\n                itemNavNumber={itemNavNumber}\n                maxItemNavNumber={maxItemNavNumber} \n                setItemNavNumber={setItemNavNumber}\n                scores={scores}\n                setScores={setScores}\n                maxScores={maxScores}\n                displayNumberOutOfRange={displayNumberOutOfRange}\n                setDisplayNumberOutOfRange={setDisplayNumberOutOfRange}\n                inputFieldRef={inputFieldRef}\n                displayFinalSubmitButton={displayFinalSubmitButton}\n                />\n              </div>\n              <div className='mr4 mb4'>\n                <CompletionBar numerator={numberOfScoresComplete} denominator={maxItemNavNumber}/>\n              </div>\n              {/*<div className='ml4 mr4'>\n                <ProgressAndSubmitContainer \n                  numerator={numberOfScoresComplete}\n                  denominator={maxItemNavNumber}\n                  scores={scores}\n                  completionButtonClick={completionButtonClick}\n                  />  \n              </div>*/}\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n    </>\n    )\n}\n\nexport default NavMain;","import logo from '../logo.svg'\n\nfunction LoginLogoutContainer(props) {\nconst Width = props.Width;\n\nreturn (\n<>\n    <div className='loginContainer mt5'>\n        <div className='bg-white ba br4 b--purple shadow-4' style={{width: Width}}>\n            <div className=\"flex justify-center\">\n                <div>\n                    <div className=\"flex flex-row items-end mt5\">\n                        <img src={logo} />\n                        <div className=\"f3 purple ml3\">Swift</div>\n                    </div>\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    </div>\n</>\n);\n}\n\nexport default LoginLogoutContainer;\n\n","function PurpleButton(props){\n    const buttonText = props.buttonText\n    return (\n        <button className='pointer grow bg-purple ba br3 white pa1 pl3 pr3 b--purple'>\n            {buttonText}\n        </button>\n    )\n}\n\nexport default PurpleButton;","import LoginLogoutContainer from './LoginLogoutContainer'\nimport PurpleButton from '../PurpleButton'\n\nfunction Login(props){\nconst clickLogin = props.clickLogin;\nconst Width = '350px';\n\nreturn (  \n    <LoginLogoutContainer Width={Width}>\n        <div className=\"flex flex-column w5 mt5\">\n            <label className='purple'>Session Name</label>\n            <input className='f5'/>\n        </div>\n        <div className=\"flex flex-column w5 mt4\">\n            <label className='purple'>Examiner Code</label>\n            <input className='f5'/>\n        </div>\n        <div className=\"flex flex-column mt4 w5 mb5\">\n            <label className='purple'>Password (just click sign in for now)</label>\n            <input className='f5' type=\"password\"/>\n        </div>\n        <div className=\"flex flex-row-reverse mb5\" onClick={clickLogin}>\n            <PurpleButton buttonText='Sign in'></PurpleButton>\n        </div>\n    </LoginLogoutContainer>\n);\n\n}\n\nexport default Login;","import PurpleButton from '../PurpleButton'\n\nfunction Modal(props) {\n    const clickOk = props.clickOk;\n    const modalTitle = props.modalTitle\n    \n    return (\n        <div className='ba b--purple pa4 br3 bg-white modal selectedBox shadow-4'>            \n                <p className='purple b f4 mb4'>{modalTitle}</p>\n            <div className='ml2 dark-gray mb4'>\n                {props.children}\n            </div>\n            <div className=\"flex flex-row-reverse\" onClick={clickOk}>\n                <PurpleButton buttonText='ok'></PurpleButton>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;","import Modal from './Modal'\n\nfunction InstructionsModal(props){\n    const clickOk = props.clickOk;\n    const modalTitle = props.modalTitle;\n\n    return (\n        <Modal modalTitle={modalTitle} clickOk={clickOk}>\n            <p>Consider the assessment item shown and the maximum mark and use this to determine a score for the minimally competent candidate.</p>\n            <p>Switch between items with the previous and next buttons, or the buttons to the left. You may sign out and return, your progress is automatically saved.</p>\n            <p>A submission button will appear when you have filled in all your scores. You may not change your scores after final submission.</p>\n        </Modal>\n    )\n}\n\nexport default InstructionsModal;","import Modal from './Modal'\n\nfunction InstructionsModal(props){\n    const clickOk = props.clickOk;\n    const modalTitle = props.modalTitle;\n\n    return (\n        <Modal modalTitle={modalTitle} clickOk={clickOk}>\n            <p>Standard setting is the process of emperically determining a cutscore.</p>\n            <p>Cutscores are important for high-stakes assessment, and used to determine which candidates are competent.</p>\n            <p>You are ensuring this assessment is defensible by completing this standard setting task.</p>\n        </Modal>\n    )\n}\n\nexport default InstructionsModal;\n\n","import PurpleButton from '../PurpleButton'\n\nfunction CompletionModal(props) {\n    const clickOk = props.clickOk;\n    const clickFinalSubmit = props.clickFinalSubmit;\n    \n    return (\n        <div className='ba b--purple pa4 br3 bg-white modal selectedBox shadow-4'>            \n                <p className='purple b f4 mb4'>Submit scores</p>\n            <div className='dark-gray mb4'>\n                <p>Are you sure you would like to submit your scores?</p>\n                <p>Once you submit them you cannot change them.</p>\n            </div>\n            <div className=\"flex flex-row justify-between\">\n                <div onClick={clickOk}>\n                    <PurpleButton buttonText='Cancel'></PurpleButton>\n                </div>\n                <div onClick={clickFinalSubmit}>\n                    <PurpleButton buttonText='Submit'></PurpleButton>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CompletionModal;","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './tachyons.css';\nimport './index.css';\nimport createItemNumbers from './helpers/createItemNumbers';\nimport mapScoresToNav from './helpers/mapScoresToNav';\nimport NavMain from './Navigation/NavMain'\nimport Login from './LoginLogout/Login'\nimport InstructionsModal from './Modals/InstructionsModal'\nimport AboutModal from './Modals/AboutModal'\nimport CompletionModal from './Modals/CompletionModal'\nimport CompletionPage from './LoginLogout/CompletionPage'\n\nfor (let i=1; i<=60; i++){\n      var img=new Image();\n      img.src=`${process.env.PUBLIC_URL}/images/page${i.toString()}.png`;\n}\n\n/* for testing only. */\nconst titlesAndLabels = {\n  titles: ['Medium Case 1','Medium Case 2','Medium Case 3','Medium Case 4','Medium Case 5','Medium Case 6'],\n  labels: [[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10],[1,2,3,4,5,6,7,8,9,10]],\n}\n\nlet myMaxScores = []\nfor (let i=0; i<60; i++) myMaxScores.push(Math.round(9*Math.random()+1));\nconsole.log(myMaxScores)\nconst maxScores = myMaxScores.slice()\n/* end for testing only */\n\n// looks like a hook but is not, just array destructuring\nconst [itemNumbers, maxItemNavNumber] = createItemNumbers(titlesAndLabels);\n\nfunction App() {\n\n  const [itemNavNumber, setItemNavNumber] = useState(1);\n  const [scores, setScores] = useState(Array(maxItemNavNumber).fill(''))\n  const [inputFieldValue, setInputFieldValue] = useState('')\n  const [scoresMappedToNav, setScoresMappedToNav] = useState(mapScoresToNav(scores, titlesAndLabels))\n  const [displayNumberOutOfRange, setDisplayNumberOutOfRange] = useState(false)\n  const [displayFinalSubmitButton, setDisplayFinalSubmitButton] = useState(false)\n  const [numberOfScoresComplete, setNumberOfScoresComplete] = useState(0)\n\n  const [renderLoginPage, setRenderLoginPage] = useState(true)\n  const [renderNavMain, setRenderNavMain] = useState(false)\n  const [renderCompletionPage, setRenderCompletionPage] = useState(false)\n  const [renderCompletionModal, setRenderCompletionModal] = useState(false)\n  const [renderInstructionsModal, setRenderInstructionsModal] = useState(false)\n  const [renderAboutModal, setRenderAboutModal] = useState(false)\n  \n  const inputFieldRef = useRef(null)\n\n  \n  function loginToNav(){\n    setRenderNavMain(true)\n    setRenderInstructionsModal(true)\n    setRenderAboutModal(false)\n    setRenderCompletionModal(false)\n    setRenderLoginPage(false)\n    setRenderCompletionPage(false)\n  }\n\n  function showAboutModal(){\n    setRenderNavMain(true)\n    setRenderInstructionsModal(false)\n    setRenderAboutModal(true)\n    setRenderCompletionModal(false)\n    setRenderLoginPage(false)\n    setRenderCompletionPage(false)\n  }\n\n  function showInstructionsModal(){\n    setRenderNavMain(true)\n    setRenderInstructionsModal(true)\n    setRenderAboutModal(false)\n    setRenderCompletionModal(false)\n    setRenderLoginPage(false)\n    setRenderCompletionPage(false)\n  }\n\n  function signOut(){\n    setRenderNavMain(false)\n    setRenderInstructionsModal(false)\n    setRenderAboutModal(false)\n    setRenderCompletionModal(false)\n    setRenderLoginPage(true)\n    setRenderCompletionPage(false)\n  }\n\n  function clickOk(){\n    setRenderNavMain(true)\n    setRenderInstructionsModal(false)\n    setRenderAboutModal(false)\n    setRenderCompletionModal(false)\n    setRenderLoginPage(false)\n    setRenderCompletionPage(false)\n  }\n\n  function completionButtonClick(){\n    setRenderNavMain(true)\n    setRenderInstructionsModal(false)\n    setRenderAboutModal(false)\n    setRenderCompletionModal(true)\n    setRenderLoginPage(false)\n    setRenderCompletionPage(false)\n  }\n\n  function clickFinalSubmit(){\n    setRenderNavMain(false)\n    setRenderInstructionsModal(false)\n    setRenderAboutModal(false)\n    setRenderCompletionModal(false)\n    setRenderLoginPage(false)\n    setRenderCompletionPage(true)\n  }\n  \n// TODOs\n// style like this https://shop.acer.edu.au/pat (ongoing)\n// Next button to work with enter\n// Auto-scroll in navigation area\n// Remove bar out of box, put bottom right corner\nuseEffect(\n    () => {\n      setScoresMappedToNav(mapScoresToNav(scores, titlesAndLabels))\n      scores.indexOf('') === -1 ? setDisplayFinalSubmitButton(true) : setDisplayFinalSubmitButton(false)\n      setNumberOfScoresComplete(scores.filter(x => x !== '').length)\n    }, \n    [scores]\n  );\n\n  useEffect(\n    () => {\n      setInputFieldValue(scores[itemNavNumber-1])\n      setDisplayNumberOutOfRange(false)\n     // if (renderNavMain) inputFieldRef.current.focus();\n    }, \n    [itemNavNumber, renderNavMain, scores]\n  );\n\n  return (\n    <> \n    {renderLoginPage && <Login clickLogin={loginToNav}/>}\n    {renderNavMain && \n      <NavMain\n        completionButtonClick={completionButtonClick}\n        showAboutModal={showAboutModal}\n        showInstructionsModal={showInstructionsModal}\n        signOut={signOut}\n        setRenderInstructionsModal={setRenderInstructionsModal}\n        itemNavNumber={itemNavNumber}\n        inputFieldValue={inputFieldValue}\n        setInputFieldValue={setInputFieldValue}\n        maxItemNavNumber={maxItemNavNumber}\n        setItemNavNumber={setItemNavNumber}\n        scores={scores}\n        setScores={setScores}\n        maxScores={maxScores}\n        displayNumberOutOfRange={displayNumberOutOfRange}\n        setDisplayNumberOutOfRange={setDisplayNumberOutOfRange}\n        inputFieldRef={inputFieldRef}\n        displayFinalSubmitButton={displayFinalSubmitButton}\n        numberOfScoresComplete={numberOfScoresComplete}\n        titlesAndLabels={titlesAndLabels}\n        itemNumbers={itemNumbers}\n        scoresMappedToNav={scoresMappedToNav}\n      />}\n    {renderInstructionsModal && <InstructionsModal modalTitle='Instructions' clickOk={clickOk}/>}\n    {renderAboutModal && <AboutModal modalTitle='About standard setting' clickOk={clickOk}/>}\n    {renderCompletionModal && <CompletionModal clickOk={clickOk} clickFinalSubmit={clickFinalSubmit}/>}\n    {renderCompletionPage && <CompletionPage></CompletionPage>}\n  </>\n  );\n}\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","import LoginLogoutContainer from './LoginLogoutContainer'\n\nfunction CompletionPage(props){\n    const Width = '500px'\n    \n    return (\n    <LoginLogoutContainer Width={Width}>\n        <div>\n            <p className='purple mt5'>Thank you for completing this standard setting task.</p>\n            <p className='purple'>Your scores have been saved.</p>\n            <p className='purple mb5'>Your College and ACER will be in touch about next steps.</p>\n        </div>\n    </LoginLogoutContainer>\n);\n}\n\nexport default CompletionPage;"],"sourceRoot":""}